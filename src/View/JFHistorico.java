/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import mvc_dao.ConnectDAO;
import Model.Historico;
import javax.swing.JOptionPane;
/**
 *
 * @author Alunos
 */
public class JFHistorico extends javax.swing.JFrame {

    /**
     * Creates new form JFHistorico
     */
    public JFHistorico() {
        initComponents();
    }
    
    String operacaoAtivaGlobal = "Nenhum";

    /* Create new form */
     public JFHistorico(String operacaoGlobal) {
        initComponents();
        operacaoAtivaGlobal = operacaoGlobal;
        String operacao = "Incluir";
        if(operacaoAtivaGlobal.equals(operacao)){
            
            JTFDesHistorico.setVisible(true);
            JTFIdHistorico.setVisible(true);
            
            jLDesHistorico.setVisible(true);
            jLIdHistorico.setVisible(true);
            
            jBConfirmar.setText("Incluir registro");
    }
    
        operacaoAtivaGlobal = operacaoGlobal;
        
        String operacao1 = "Alterar";
        String operacao2 = "Consultar";
        String operacao3 = "Excluir";
        
        if(operacaoAtivaGlobal.equals(operacao1) || operacaoAtivaGlobal.equals(operacao2) || operacaoAtivaGlobal.equals(operacao3)){
        
            JTFDesHistorico.setVisible(false);
            JTFIdHistorico.setVisible(true);
            
            
            jLDesHistorico.setVisible(false);
            jLIdHistorico.setVisible(true);
            
            
            
            jBConfirmar.setText("Pesquisar registro");
        
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLIdHistorico = new javax.swing.JLabel();
        jLDesHistorico = new javax.swing.JLabel();
        jBConfirmar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        JTFIdHistorico = new javax.swing.JTextField();
        JTFDesHistorico = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLIdHistorico.setText("Id do Histórico:");

        jLDesHistorico.setText("Descrição do Histórico:");

        jBConfirmar.setText("Confirmar");
        jBConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfirmarActionPerformed(evt);
            }
        });

        jButton1.setText("Testar Conexão");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JTFIdHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFIdHistoricoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLIdHistorico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JTFIdHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLDesHistorico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                                .addComponent(JTFDesHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jBConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLIdHistorico)
                    .addComponent(JTFIdHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDesHistorico)
                    .addComponent(JTFDesHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jBConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTFIdHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFIdHistoricoActionPerformed
        // TODO add your handling code here:
            
            
    }//GEN-LAST:event_JTFIdHistoricoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ConnectDAO objcon = new ConnectDAO();
        objcon.connectDB();   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfirmarActionPerformed
        // TODO add your handling code here:
        String operacao = "Incluir";
        if (operacaoAtivaGlobal.equals(operacao)){
            //criar o objeto dados_cliente
            Historico dados_historico = new Historico();
            // Atribuir os dados da tela no novo objeto
            dados_historico.setId_his(Integer.parseInt(JTFIdHistorico.getText()));
            dados_historico.setDes_his(JTFDesHistorico.getText());
            
            ConnectDAO objcon = new ConnectDAO();

            objcon.insereRegistroJFBD("HISTORICOS", dados_historico.dadosSQLValues());
            
            JTFIdHistorico.setText("");
            JTFDesHistorico.setText("");
        }
        
        Historico Historico_tela = new Historico();
        operacao = "Alteracao";
        if (operacaoAtivaGlobal.equals(operacao)){
        ConnectDAO objcon = new ConnectDAO();
        Historico dados_historico = new Historico();
            dados_historico.setId_his(Integer.parseInt(JTFIdHistorico.getText()));
            dados_historico.setDes_his(JTFDesHistorico.getText());
            
            
            
            objcon.alteraRegistroJFBD("HISTORICOS",dados_historico.alteraDadosSQLValues(),"ID_HIS = " +JTFIdHistorico.getText());
            
            JTFIdHistorico.setText("");
            JTFDesHistorico.setText("");
            
            
        }
        
        operacao = "Alterar";
        if (operacaoAtivaGlobal.equals(operacao)) {
            ConnectDAO objcon = new ConnectDAO();
            Historico_tela = objcon.pesquisaHistoricoJFBD("HISTORICOS","ID_HIS = '" +JTFIdHistorico.getText()+ "'");
           
            
            JTFIdHistorico.setText(Integer.toString(Historico_tela.getId_his()));
            JTFDesHistorico.setText(Historico_tela.getDes_his());
            
            
            
           
            JTFIdHistorico.setVisible(true);
            JTFDesHistorico.setVisible(true);        
                    
            
           
            jLDesHistorico.setVisible(true);
            jLIdHistorico.setVisible(true);
            
            
            
            
            jBConfirmar.setText("Alterar registro");
                  
            operacaoAtivaGlobal = "Alteracao";        
        }
        
        operacao = "Consultado";
        if (operacaoAtivaGlobal.equals(operacao)) {
            this.dispose();
        }
        
        
        
        operacao = "Excluido";
        if (operacaoAtivaGlobal.equals(operacao)) {
            int resposta = JOptionPane.showConfirmDialog(
            this, 
             "Tem certeza que deseja excluir esse Registro?", 
             "Confirmação", 
               JOptionPane.YES_NO_OPTION
            );
 
            if (resposta == JOptionPane.YES_OPTION) {
                ConnectDAO objcon = new ConnectDAO();
                objcon.excluiRegistroJFBD("HISTORICOS","ID_HIS = '" +JTFIdHistorico.getText()+ "'");
                JOptionPane.showMessageDialog(this, "Registro excluído!");
                this.dispose();
            } else {
                this.dispose();
            }
        }
        
        String operacao1 = "Excluir";
        String operacao2 = "Consultar";
        
        
        if (operacaoAtivaGlobal.equals(operacao1) || operacaoAtivaGlobal.equals(operacao2)) {
            ConnectDAO objcon = new ConnectDAO();
            Historico_tela = objcon.pesquisaHistoricoJFBD("HISTORICOS","ID_HIS = '" +JTFIdHistorico.getText()+ "'");
            
            
            JTFIdHistorico.setText(Integer.toString(Historico_tela.getId_his()));
            JTFDesHistorico.setText(Historico_tela.getDes_his());
            
            
            JTFIdHistorico.setVisible(true);
            JTFDesHistorico.setVisible(true);
           
            JTFIdHistorico.setEditable(false);
            JTFDesHistorico.setEditable(false);        
               
            
            

            jLDesHistorico.setVisible(true);
            jLIdHistorico.setVisible(true);
            
            
            
            jBConfirmar.setText("Fechar");
                  
            if (operacaoAtivaGlobal.equals(operacao1)) {
            operacaoAtivaGlobal = "Excluido";
            jBConfirmar.setText("Excluir Registro");
            
            }
            else {
            operacaoAtivaGlobal = "Consultado";
            }              
              
        }
        
    }//GEN-LAST:event_jBConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFHistorico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFDesHistorico;
    private javax.swing.JTextField JTFIdHistorico;
    private javax.swing.JButton jBConfirmar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLDesHistorico;
    private javax.swing.JLabel jLIdHistorico;
    // End of variables declaration//GEN-END:variables
}
